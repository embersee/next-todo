import { useEffect, useState } from 'react'

import Board from '../../components/Board'
import { BoardTitle } from '../../components/BoardTitle'
import FullScreenLoader from '../../components/utils/FullscreenLoader'
import Head from 'next/head'
import type { NextPage } from 'next'
import { requireAuth } from '../../utils/requireAuth'
import { trpc } from '../../utils/trpc'
import { useRouter } from 'next/router'

export const getServerSideProps = requireAuth(async (ctx) => {
  return { props: {} }
})

const MyBoard: NextPage = () => {
  const [isBrowser, setIsBrowser] = useState(false)

  useEffect(() => {
    setIsBrowser(process.browser)
  }, [])

  const router = useRouter()
  const title = router.query.board as string

  const { data, error, isLoading, isFetching } = trpc.useQuery([
    'users.board',
    title,
  ])

  if (isLoading) return <FullScreenLoader />
  // if (isFetching) return <FullScreenLoader />

  if (error) return <>{error.message}</>

  console.log('render [board]')

  return (
    <div className='h-screen w-screen'>
      <Head>
        <title>{title}</title>
        <meta name='viewport' content='width=device-width, initial-scale=2' />
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      <main>
        <div className='absolute top-2 left-1/2 transform -translate-x-1/2 '>
          <BoardTitle currentTitle={title} textSize='text-3xl' />
        </div>
        {isBrowser ? (
          <Board
            data={data?.selectedBoard?.data}
            title={data?.selectedBoard?.title as string}
          />
        ) : null}
      </main>

      <footer></footer>
    </div>
  )
}
export default MyBoard
